name: My Workflow
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  comment: 
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        dir: [aws, test]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: open-policy-agent/setup-opa@v2
      - name: run opa
        id: opa
        working-directory: ${{ matrix.dir }}
        run: |
          opa eval -b ../aws-policy/ --input tfplan.json "data.main" --format=pretty > opa-result.json
      - name: print result into github output
        if: always()
        id: opa-result
        run: |
          echo "testinggg: ${{ steps.opa.outputs.stdout }}"
          echo "testinggg: ${{ steps.opa.outputs.stderr }}"
          output="$(jq -c . ${{ matrix.dir }}/opa-result.json)"
          echo "result=${output}" >> "${GITHUB_OUTPUT}"
      - uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const result = ${{ steps.opa-result.outputs.result }}
            const colors = {"warn":"!", "deny":"-"};
            const deny = result.deny.map(x => `${colors.deny} ${x}`);
            const warn = result.warn.map(x => `${colors.warn} ${x}`); 
            const outcome = deny.length > 0 ? 'Failure' : 'Success';
            let output = `### open policy agent check: \`${outcome}\`
            dir: ${{ matrix.dir }}
            <details><summary>policy check output</summary>
            
            \`\`\`diff\n
            Deny: ${deny.length}
            ${deny.join("\n")}
            
            # Warn ${warn.length}
            ${warn.join("\n")}
            \`\`\`
            </details>
            
            end`
            
            output = output.replace('"', '\"')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
