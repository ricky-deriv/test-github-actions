name: Policy evaluation workflow

on:
  workflow_call:
    inputs:
      dir:
        required: true
        type: string
      
jobs:
  echo-result:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.POLICY_PRIVATE_KEY }}"
    - name: get policies
      env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        git clone git@github.com:ricky-deriv/aws-policy.git policies
    - name: edit dir name for artifact
      run: |
        new_name=$(echo ${{ inputs.dir }} | tr '/' ' ')
        echo "artifact-name=${new_name}" >> "${GITHUB_ENV}"
    - name: get tf-results
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.artifact-name }}-tf-plan
    - uses: open-policy-agent/setup-opa@v2
    - name: run opa
      id: opa
      working-directory: ${{ inputs.dir }}
      run: |
        opa eval -b ${{ github.workspace }}/policies/ --input tfplan.json "data.main" --format=pretty > opa-result.json
        echo "running"
        if [[ $(jq '.deny | length > 0' opa-result.json) == "true" ]]; then
          echo "The 'deny' array is not empty."
          exit 1
        else
          echo "The 'deny' array is empty."
        fi
    - name: edit dir name for artifact
      if: always()
      run: |
        new_name=$(echo ${{ inputs.dir }} | tr '/' ' ')
        echo "artifact-name=${new_name}" >> "${GITHUB_ENV}"
    - name: upload opa result
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifact-name }}-opa-result
        path: ${{ inputs.dir }}/opa-result.json
